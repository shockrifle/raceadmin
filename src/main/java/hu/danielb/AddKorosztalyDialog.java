/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package hu.danielb;

import hu.danielb.data.Database;
import hu.danielb.data.Korosztaly;

import javax.swing.*;
import java.awt.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * @author danielb
 */
public class AddKorosztalyDialog extends BaseDialog {

    Korosztaly korosztaly = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTextField jTextField1;

    public AddKorosztalyDialog(Dialog owner) {
        super(owner);
        init();
        this.setLocationRelativeTo(owner);
    }

    public AddKorosztalyDialog(Frame owner) {
        super(owner);
        init();
        this.setLocationRelativeTo(owner);
    }

    public AddKorosztalyDialog(Dialog owner, Korosztaly korosztaly) {
        super(owner);
        this.korosztaly = korosztaly;
        init();
        this.setLocationRelativeTo(owner);
    }
    public AddKorosztalyDialog(Frame owner, Korosztaly korosztaly) {
        super(owner);
        this.korosztaly = korosztaly;
        init();
        this.setLocationRelativeTo(owner);
    }

    private void init() {
        initComponents();
        if (korosztaly != null) {
            jTextField1.setText(korosztaly.getNev());
            jSpinner1.setValue(korosztaly.getMin());
            jSpinner2.setValue(korosztaly.getMax());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setResizable(false);

        jLabel1.setText("Korosztály neve:");

        jLabel2.setText("Alsó határ:");

        jLabel3.setText("Felső határ");

        jSpinner1.setModel(new SpinnerNumberModel(1900, 1900, Calendar.getInstance().get(Calendar.YEAR), 1));
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jSpinner2.setModel(new SpinnerNumberModel(1900, 1900, Calendar.getInstance().get(Calendar.YEAR), 1));
        jSpinner2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner2StateChanged(evt);
            }
        });

        jButton1.setText("Mégse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Mentés");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton1))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel1)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jLabel3))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jTextField1)
                                                        .addComponent(jSpinner1, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                                        .addComponent(jSpinner2))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton1)
                                        .addComponent(jButton2))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        if ((Integer) jSpinner1.getValue() > (Integer) jSpinner2.getValue()) {
            jSpinner2.setValue(jSpinner1.getValue());
        }
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jSpinner2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner2StateChanged
        if ((Integer) jSpinner1.getValue() > (Integer) jSpinner2.getValue()) {
            jSpinner1.setValue(jSpinner2.getValue());
        }
    }//GEN-LAST:event_jSpinner2StateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            ArrayList<Korosztaly> utkozes = new ArrayList<>();
            ResultSet rs = Database.runSql("select * from 'Korosztaly' where (minimum between ? and ? or maximum between ? and ?) and not id = ?", Database.QUERRY,
                    String.valueOf(jSpinner1.getValue()),
                    String.valueOf(jSpinner2.getValue()),
                    String.valueOf(jSpinner1.getValue()),
                    String.valueOf(jSpinner2.getValue()),
                    korosztaly != null ? String.valueOf(korosztaly.getId()) : "0");
            while (rs.next()) {
                utkozes.add(new Korosztaly(rs.getInt("id"), rs.getString("name"), rs.getInt("minimum"), rs.getInt("maximum")));
            }
            if (utkozes.isEmpty()) {
                if (korosztaly != null) {
                    if (0 == JOptionPane.showOptionDialog(this, "Ha megválzotatja a korosztályt, az eddigi eredmények elvesznek!\nBiztos ezt akarja?", "Figyelem!", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, new String[]{"Igen", "Nem"}, null)) {
                        Database.runSql("update 'Korosztaly' set name = ?, minimum = ?, maximum = ? where id = ?", Database.UPDATE, jTextField1.getText(), String.valueOf(jSpinner1.getValue()), String.valueOf(jSpinner2.getValue()), String.valueOf(korosztaly.getId()));
                        Database.runSql("update 'Versenyzo' set "
                                        + "position = 0, "
                                ,//+ "korosztaly_id = (select Korosztaly.id from Korosztaly where Versenyzo.age between Korosztaly.minimum and Korosztaly.maximum)",
                                Database.UPDATE);
                    }
                } else {
                    Database.runSql("insert into 'Korosztaly' (name, minimum, maximum) values(?,?,?)", Database.UPDATE, jTextField1.getText(), String.valueOf(jSpinner1.getValue()), String.valueOf(jSpinner2.getValue()));
                    Database.runSql("update 'Versenyzo' set "
                            + "position = 0, "
                            //+ "korosztaly_id = (select Korosztaly.id from Korosztaly where Versenyzo.age between Korosztaly.minimum and Korosztaly.maximum) "
                            + "where korosztaly_id = null or korosztaly_id = '' or korosztaly_id = 0", Database.UPDATE);
                }
                this.dispose();
            } else {
                String msg = "A beállított korhatár ütközik a következővel:\n";
                for (Korosztaly korosztaly1 : utkozes) {
                    msg += korosztaly1.getNev() + "\n";
                }
                warn(msg);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddKorosztalyDialog.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed
    // End of variables declaration//GEN-END:variables
}
